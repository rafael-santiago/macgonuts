#
# Copyright (c) 2022, Rafael Santiago
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
include ../../build/toolsets.hsl

local var sources type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;
local var current_toolset type string;
local var appname type string;

project macgonuts-cmdtool-tests : toolset $current_toolset
                                : $sources, $includes, $cflags, $libraries, $ldflags, $appname;

macgonuts-cmdtool-tests.preloading() {
    $current_toolset = get_app_toolset();
}

macgonuts-cmdtool-tests.prologue() {
    set_rootdir("../../");
    $includes = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $libraries = hefesto.sys.get_option("libraries");
    $ldflags = hefesto.sys.get_option("ldflags");
    if (hefesto.sys.os_name() == "linux") {
        $ldflags.add_item("-ldl");
    } else if (hefesto.sys.os_name() == "freebsd") {
        $ldflags.add_item("-lexecinfo");
    }
    $sources.ls(".*\\.c$");
    $appname = "macgonuts-cmdtool-tests";
    get_cmd_objs($ldflags);
}

macgonuts-cmdtool-tests.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        runtests(hefesto.sys.make_path("bin", $appname), "--cutest-leak-check=yes");
    }
}

local function get_cmd_objs(ldflags type list) : result type none {
    var oldcwd type string;
    $oldcwd = hefesto.sys.pwd();
    if (hefesto.sys.cd("../.o")) {
        var objs type list;
        $objs.ls(".*\\.o$");
        var o type int;
        $o = 0;
        while ($o < $objs.count()) {
            var obj type string;
            $obj = $objs.item($o);
            if ($obj.match("main\\.o$") == 1) {
                $objs.del_index($o);
                break;
            }
            $o = $o + 1;
        }
        $o = 0;
        while ($o < $ldflags.count()) {
            $objs.add_item($ldflags.item($o));
            $o = $o + 1;
        }
        $ldflags = cplist($objs);
        hefesto.sys.byref($ldflags);
        hefesto.sys.cd($oldcwd);
    }
}

local function cplist(l type list) : result type list {
    result $l;
}
